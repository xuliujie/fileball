# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-12-12 09:35
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone
import social_auth.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SteamUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('steamid', models.CharField(max_length=17, unique=True)),
                ('personaname', models.CharField(max_length=255)),
                ('profileurl', models.CharField(max_length=300)),
                ('avatar', models.CharField(max_length=255)),
                ('avatarmedium', models.CharField(max_length=255)),
                ('avatarfull', models.CharField(max_length=255)),
                ('email', models.CharField(blank=True, default=b'', max_length=255)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),
                ('tradeurl', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('level', models.IntegerField(default=1)),
                ('is_cheating', models.BooleanField(default=False, verbose_name='Cheating')),
                ('can_chat', models.BooleanField(default=True, verbose_name='Can Chat')),
                ('amount', models.FloatField(default=0.0, verbose_name='Amount')),
                ('total_amount', models.FloatField(default=0.0, verbose_name='Total Amount')),
                ('ref_code', models.CharField(default=social_auth.models.ref_generator, max_length=32, verbose_name='Affiliate Code')),
                ('ref_point', models.IntegerField(default=0, verbose_name='Affiliate Point')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'SteamUsers',
                'verbose_name_plural': 'SteamUsers',
            },
        ),
    ]
